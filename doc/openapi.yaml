---
openapi: 3.0.3
info:
  title: blogger
  version: 1.0.0
servers: []
paths:
  "/api/v1/auth/user":
    post:
      summary: authenticate
      tags:
      - Api::V1::Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: user1@test.com
              password: password
      responses:
        '200':
          description: authenticates a user when the credentials are valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
              example:
                token: eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMzksImV4cCI6MTY0Mjk2NDU4NX0.NPjDoV-e7vtBzUFmz1q1stvjcxJPv6hXbALy5NQ_TLw
        '401':
          description: fails to authenticate a user when the crentials are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      user_authentication:
                        type: string
              example:
                error:
                  user_authentication: invalid credentials
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::User
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
            example:
              user:
                name: user1
                email: user1@test.com
                password: password
      responses:
        '201':
          description: creates a new user when the request is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              example:
                name: user1
                email: user1@test.com
        '422':
          description: fails when the name is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: Name is too short (minimum is 3 characters)
